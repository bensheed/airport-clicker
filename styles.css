# Read the file content
current_content_response = default_api.read_file(path="game.js")
if current_content_response['read_file_response']['status'] != 'succeeded':
    print("Error reading game.js again.")
else:
    current_content = current_content_response['read_file_response']['result']
    
    # Define the unique start and end markers of the Python block
    # Using markers that are less likely to appear elsewhere
    python_start_marker = "# Read the current content of game.js\\ngame_js_content = default_api.read_file"
    python_end_marker = "print(\\\"Error: Could not find the upgradeDefinitions array in game.js\\\")" # The last line of the python code

    start_index = current_content.find(python_start_marker)
    end_index = current_content.find(python_end_marker)

    if start_index != -1 and end_index != -1 and end_index > start_index:
        # Find the beginning of the line where the start marker is (actually the line before it)
        # Look for the end of the previous correct JS line
        js_line_before_start = "totalPassengers: 0,"
        start_js_index = current_content.find(js_line_before_start)
        
        if start_js_index != -1:
             line_start_index = start_js_index + len(js_line_before_start)
             # Ensure we capture the newline right after the JS line to start the removal
             if current_content[line_start_index] == '\\n':
                  line_start_index += 1
             elif current_content[line_start_index:line_start_index+2] == '\\r\\n': # Handle Windows line endings
                  line_start_index += 2
        else:
             # Fallback if the exact JS line isn't found (shouldn't happen here)
             line_start_index = current_content.rfind('\\n', 0, start_index)
             if line_start_index == -1:
                 line_start_index = 0
             else:
                 line_start_index += 1
        

        # Find the end of the line where the end marker is
        line_end_index = current_content.find('\\n', end_index)
        if line_end_index == -1:
             line_end_index = len(current_content) # Marker might be on the last line
        else:
             # Check if the next line is the correct JS line
             js_line_after_end = "    airportLevel: 1,"
             next_line_start = line_end_index + 1
             if current_content.startswith(js_line_after_end, next_line_start):
                 line_end_index = next_line_start # Set end index to start of the next correct line
             else:
                 # If the next line isn't what we expect, just remove up to the end marker's line end
                 line_end_index += 1


        # Construct the corrected code
        part1 = current_content[:line_start_index] # Code before the bad block lines
        part2 = current_content[line_end_index:]   # Code after the bad block lines

        # Ensure part1 ends with a newline if it doesn't already, and part2 doesn't start with one redundantly
        if not part1.endswith('\\n') and not part1.endswith('\\r'):
             part1 += '\\n' # Add a newline if missing
        
        # Remove leading whitespace/newlines from part2 if part1 added a newline
        part2 = part2.lstrip('\\n\\r')


        corrected_content = part1 + part2 
        
        # Final verification
        if "renderUpgrades()" in corrected_content and "upgradeDefinitions = [" in corrected_content and "airportLevel: 1," in corrected_content and python_start_marker not in corrected_content:
             print("Attempting to write corrected game.js...")
             print(default_api.write_file(content=corrected_content, path="game.js"))
        else:
              print("Error: Corrected content seems invalid after removal attempt or markers still present. Aborting write.")
              #print(f"Debug Info: Part 1 ends with: {repr(part1[-20:])}") # Keep it concise
              #print(f"Debug Info: Part 2 starts with: {repr(part2[:20])}")

    else:
        print(f"Error: Could not locate the Python code markers in game.js. Start index: {start_index}, End index: {end_index}")
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Arial', sans-serif;
    line-height: 1.6;
    background-color: #f0f8ff;
    color: #333;
}

.game-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

header {
    background-color: #2c3e50;
    color: white;
    padding: 15px;
    border-radius: 5px 5px 0 0;
}

header h1 {
    margin-bottom: 10px;
}

.resources {
    display: flex;
    justify-content: space-between;
    background-color: #34495e;
    padding: 10px;
    border-radius: 5px;
    margin-top: 10px;
}

.resource {
    font-size: 1.2rem;
    font-weight: bold;
}

main {
    display: grid;
    grid-template-columns: 3fr 1fr;
    gap: 20px;
    margin-top: 20px;
}

.game-area {
    background-color: white;
    border-radius: 5px;
    padding: 20px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.clicker-area {
    text-align: center;
    margin-bottom: 30px;
}

#main-clicker {
    background-color: #3498db;
    color: white;
    border: none;
    padding: 20px 40px;
    font-size: 1.5rem;
    border-radius: 50px;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.1s;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

#main-clicker:hover {
    background-color: #2980b9;
}

#main-clicker:active {
    transform: scale(0.98);
}

#click-feedback {
    position: relative;
    height: 40px;
    margin-top: 10px;
    font-size: 1.2rem;
    color: #27ae60;
    overflow: hidden;
}

.click-feedback-item {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(39, 174, 96, 0.2);
    padding: 3px 10px;
    border-radius: 20px;
    animation: float-up 1.5s ease-out;
    pointer-events: none;
}

@keyframes float-up {
    0% {
        opacity: 1;
        top: 100%;
    }
    80% {
        opacity: 0.8;
    }
    100% {
        opacity: 0;
        top: 0;
    }
}

.tabs {
    display: flex;
    border-bottom: 2px solid #ddd;
    margin-bottom: 20px;
}

.tab-button {
    background-color: #f8f9fa;
    border: none;
    padding: 10px 20px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.3s;
}

.tab-button:hover {
    background-color: #e9ecef;
}

.tab-button.active {
    background-color: #3498db;
    color: white;
}

.tab-pane {
    display: none;
}

.tab-pane.active {
    display: block;
}

.building-list, .staff-list, .upgrade-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 15px;
    margin-top: 15px;
}

.building-item, .staff-item, .upgrade-item {
    background-color: #f8f9fa;
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 15px;
    transition: transform 0.2s, background-color 0.2s, opacity 0.2s;
}

/* Apply hover effects only to non-purchased items */
.building-item:hover, 
.staff-item:hover, 
.upgrade-item:not(.purchased):hover {
    transform: translateY(-3px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.building-name, .staff-name, .upgrade-name {
    font-weight: bold;
    margin-bottom: 5px;
}

.building-cost, .staff-cost, .upgrade-cost {
    color: #e74c3c;
    margin-bottom: 10px;
}

.building-description, .staff-description, .upgrade-description {
    font-size: 0.9rem;
    color: #666;
    margin-bottom: 10px;
}

.buy-button {
    background-color: #2ecc71;
    color: white;
    border: none;
    padding: 5px 10px;
    border-radius: 3px;
    cursor: pointer;
    width: 100%;
    transition: background-color 0.2s, transform 0.1s;
}

.buy-button:hover:not(:disabled) {
    background-color: #27ae60;
    transform: translateY(-2px);
}

.buy-button:active:not(:disabled) {
    transform: translateY(0);
}

.buy-button:disabled {
    background-color: #95a5a6;
    cursor: not-allowed;
    opacity: 0.7;
}

.stats-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 15px;
}

.stat {
    background-color: #f8f9fa;
    padding: 10px;
    border-radius: 5px;
    border: 1px solid #ddd;
}

.notifications {
    background-color: white;
    border-radius: 5px;
    padding: 15px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    max-height: 600px;
    overflow-y: auto;
}

.notifications h3 {
    margin-bottom: 10px;
    border-bottom: 1px solid #ddd;
    padding-bottom: 5px;
}

.notification {
    padding: 10px;
    margin-bottom: 10px;
    border-radius: 3px;
    background-color: #f8f9fa;
    border-left: 4px solid #3498db;
}

.notification.success {
    border-left-color: #2ecc71;
}

.notification.warning {
    border-left-color: #f39c12;
}

.notification.error {
    border-left-color: #e74c3c;
}

footer {
    margin-top: 30px;
    text-align: center;
    color: #7f8c8d;
    font-size: 0.9rem;
}

@media (max-width: 768px) {
    main {
        grid-template-columns: 1fr;
    }
    
    .resources {
        flex-direction: column;
        gap: 10px;
    }
    
    .building-list, .staff-list, .upgrade-list {
        grid-template-columns: 1fr;
    }
}
/* Tab Badges */
.tab-button {
    position: relative; /* Needed for absolute positioning of badge */
}

.badge {
    display: none; /* Hidden by default */
    position: absolute;
    top: 2px;
    right: 5px;
    width: 10px;
    height: 10px;
    background-color: red;
    border-radius: 50%;
    border: 1px solid white;
}

.badge.visible {
    display: block; /* Show when visible class is added */
}

/* ---- Style for purchased upgrades ---- */
.upgrade-item.purchased {
    opacity: 0.6; /* Make it slightly transparent */
    background-color: #e9ecef; /* Lighter background */
    border-color: #ced4da; /* Lighter border */
}

/* Remove hover transform/shadow effect from purchased items */
.upgrade-item.purchased:hover {
    transform: none; 
    box-shadow: none; 
}

/* Style the button within a purchased upgrade item */
.upgrade-item.purchased .buy-button {
    background-color: #6c757d; /* Grey out the button */
    color: white;
    cursor: not-allowed;
    border: none; /* Ensure no border overrides */
}

/* Prevent hover effects on the disabled button */
.upgrade-item.purchased .buy-button:hover {
    background-color: #6c757d; /* Keep hover color the same as disabled */
    transform: none;
}
/* ---- End purchased upgrade styles ---- */
